[{"D:\\CS\\To-Do-List-2020\\src\\index.js":"1","D:\\CS\\To-Do-List-2020\\src\\reportWebVitals.js":"2","D:\\CS\\To-Do-List-2020\\src\\App.js":"3","D:\\CS\\To-Do-List-2020\\src\\components\\StateProvider.js":"4","D:\\CS\\To-Do-List-2020\\src\\components\\reducer.js":"5","D:\\CS\\To-Do-List-2020\\src\\components\\Home.js":"6","D:\\CS\\To-Do-List-2020\\src\\components\\Categories.js":"7","D:\\CS\\To-Do-List-2020\\src\\components\\Reminder.js":"8","D:\\CS\\To-Do-List-2020\\src\\components\\Navbar.js":"9","D:\\CS\\To-Do-List-2020\\src\\components\\SignIn.js":"10","D:\\CS\\To-Do-List-2020\\src\\components\\ExistingCategory.js":"11","D:\\CS\\To-Do-List-2020\\src\\components\\HomeSvg.js":"12","D:\\CS\\To-Do-List-2020\\src\\components\\AddCategory.js":"13","D:\\CS\\To-Do-List-2020\\src\\components\\ReminderCard.js":"14","D:\\CS\\To-Do-List-2020\\src\\components\\ReminderSvg.js":"15","D:\\CS\\To-Do-List-2020\\src\\Firebase.js":"16","D:\\CS\\To-Do-List-2020\\src\\config.js":"17"},{"size":764,"mtime":1607840949336,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1607780284241,"results":"20","hashOfConfig":"19"},{"size":1039,"mtime":1607780283977,"results":"21","hashOfConfig":"19"},{"size":378,"mtime":1607780284160,"results":"22","hashOfConfig":"19"},{"size":1359,"mtime":1607844727904,"results":"23","hashOfConfig":"19"},{"size":506,"mtime":1607800142160,"results":"24","hashOfConfig":"19"},{"size":1045,"mtime":1607842633410,"results":"25","hashOfConfig":"19"},{"size":9577,"mtime":1607845036008,"results":"26","hashOfConfig":"19"},{"size":3250,"mtime":1607799641549,"results":"27","hashOfConfig":"19"},{"size":12609,"mtime":1607798961076,"results":"28","hashOfConfig":"19"},{"size":857,"mtime":1607844448574,"results":"29","hashOfConfig":"19"},{"size":18119,"mtime":1607780284064,"results":"30","hashOfConfig":"19"},{"size":3179,"mtime":1607842635593,"results":"31","hashOfConfig":"19"},{"size":2391,"mtime":1607780284114,"results":"32","hashOfConfig":"19"},{"size":22775,"mtime":1607780284146,"results":"33","hashOfConfig":"19"},{"size":213,"mtime":1607781282726,"results":"34","hashOfConfig":"19"},{"size":373,"mtime":1607781267120,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pplghk",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\CS\\To-Do-List-2020\\src\\index.js",[],"D:\\CS\\To-Do-List-2020\\src\\reportWebVitals.js",[],["75","76"],"D:\\CS\\To-Do-List-2020\\src\\App.js",["77"],"import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Home from './components/Home';\r\nimport Categories from './components/Categories'\r\nimport Reminder from './components/Reminder';\r\nimport SignIn from './components/SignIn';\r\n\r\nimport {useStateValue} from './components/StateProvider';\r\n\r\nfunction App() {\r\n\r\n  const [{activeCategory}, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Switch>\r\n        <Route exact path='/login'>\r\n\t\t\t\t\t<SignIn />\r\n\t\t\t\t</Route>\r\n        <Route exact path=\"/\">\r\n          <Navbar title=\"Home\" />\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/categories\">\r\n          <Navbar title=\"Categories\" />\r\n          <Categories />\r\n        </Route>\r\n        <Route exact path=\"/reminder\">\r\n          <Navbar title={activeCategory?.length? \"Reminders\": \"Reminders\"} />\r\n          <Reminder />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\CS\\To-Do-List-2020\\src\\components\\StateProvider.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\reducer.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\Home.js",["78"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Home.css';\r\nimport HomeSvg from './HomeSvg';\r\n\r\nfunction Home() {\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = localStorage.getItem('TOKEN');\r\n\t\tif (token === null) {\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='home'>\r\n\t\t\t<h1>All Caught Up!</h1>\r\n\t\t\t<div className='home-svg'>\r\n\t\t\t\t<HomeSvg />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","D:\\CS\\To-Do-List-2020\\src\\components\\Categories.js",["79","80"],"D:\\CS\\To-Do-List-2020\\src\\components\\Reminder.js",["81","82","83","84"],"import React, { useEffect, useState } from 'react';\r\nimport './Reminder.css';\r\n\r\nimport { useStateValue } from './StateProvider';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tTextField,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\n\r\nimport ReminderCard from './ReminderCard';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ReminderSvg from './ReminderSvg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttextField: {\r\n\t\tmarginBottom: '20px',\r\n\t\t//   display: 'grid',\r\n\t\t//   placeItems: 'center'\r\n\t},\r\n}));\r\n\r\nfunction Reminder() {\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = localStorage.getItem('TOKEN');\r\n\t\tif (token === null) {\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst [\r\n\t\t{ activeCategory, reminders, categories, editId, editTitle, editText },\r\n\t\tdispatch,\r\n\t] = useStateValue();\r\n\r\n\tconst [dialogOpen, setDialogOpen] = useState(false);\r\n\tconst [activeReminders, setActiveReminders] = useState([]);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [date, setDate] = useState('');\r\n\tconst [time, setTime] = useState('');\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst filterReminders = () => {\r\n\t\tvar items = reminders.filter(function (reminder) {\r\n\t\t\treturn reminder.category === activeCategory;\r\n\t\t});\r\n\r\n\t\t// console.log(items);\r\n\r\n\t\tsetActiveReminders(items);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfilterReminders();\r\n\t}, [reminders]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTitle(editTitle);\r\n\t\tsetDescription(editText);\r\n\t}, [editId]);\r\n\r\n\t// console.log(activeReminders);\r\n\r\n\t// console.log(reminders);\r\n\r\n\tconst handleDialogOpen = () => {\r\n\t\tsetDialogOpen(true);\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tif (editId !== 0) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'EDIT_REMINDER',\r\n\t\t\t\tpayload: { id: 0, title: '', text: '' },\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetDialogOpen(false);\r\n\t};\r\n\r\n\t// Date format reminder match\r\n\t// console.log(new Date().toLocaleString())\r\n\r\n\tconst handleDateTime = (e) => {\r\n\t\tsetError(false);\r\n\r\n\t\tconst item = e.target.value;\r\n\r\n\t\t// 2020-12-12T17:08\r\n\t\t// console.log(item.slice(0, 10));\r\n\t\t// console.log(item.slice(11, 16));\r\n\r\n\t\tsetDate(item.slice(0, 10));\r\n\t\tsetTime(item.slice(11, 16));\r\n\t};\r\n\r\n\t// console.log(Math.floor(Math.random() * 10000) + Math.floor(Math.random() * 1000));\r\n\r\n\tconst handleReminderSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Also use this for edit -> delete current card then add a new card\r\n\r\n\t\tvar randomId =\r\n\t\t\tMath.floor(Math.random() * 10000) +\r\n\t\t\tMath.floor(Math.random() * 1000);\r\n\r\n\t\tvar tempState = {\r\n\t\t\tcategory: activeCategory,\r\n\t\t\tid: randomId,\r\n\t\t\ttitle: title,\r\n\t\t\ttext: description,\r\n\t\t\ttime: time,\r\n\t\t\tdate: date,\r\n\t\t};\r\n\r\n\t\t// console.log(\"Add Reminder >>>\", tempState);\r\n\r\n\t\tif (title.length === 0 || date.length === 0 || time.length === 0) {\r\n\t\t\tsetError(true);\r\n\t\t} else {\r\n\t\t\t// EDIT  REMINDER\r\n\t\t\t// console.log(editId);\r\n\r\n\t\t\tif (editId !== 0) {\r\n\t\t\t\tvar updatedReminders = reminders.filter(function (reminder) {\r\n\t\t\t\t\treturn reminder.id != editId;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'UPDATE_REMINDERS',\r\n\t\t\t\t\tpayload: updatedReminders,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'EDIT_REMINDER',\r\n\t\t\t\t\tpayload: { id: 0, title: '', text: '' },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'ADD_REMINDER',\r\n\t\t\t\tpayload: tempState,\r\n\t\t\t});\r\n\r\n\t\t\tsetTitle('');\r\n\t\t\tsetDescription('');\r\n\t\t\tsetDate('');\r\n\t\t\tsetTime('');\r\n\t\t\tsetDialogOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// console.log(\"Dialog Open >>>>\", dialogOpen);\r\n\r\n\tconst [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n\r\n\tconst handleDeleteCategory = () => {\r\n\t\tvar updatedReminders = reminders.filter(function (reminder) {\r\n\t\t\treturn reminder.category !== activeCategory;\r\n\t\t});\r\n\r\n\t\tvar updatedCategories = categories.filter(function (category) {\r\n\t\t\treturn category !== activeCategory;\r\n\t\t});\r\n\r\n\t\t// console.log(updatedCategories);\r\n\t\t// console.log(updatedReminders);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'UPDATE_REMINDERS',\r\n\t\t\tpayload: updatedReminders,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'UPDATE_CATEGORIES',\r\n\t\t\tpayload: updatedCategories,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'ACTIVE_CATEGORY',\r\n\t\t\tpayload: {\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tcid: '',\r\n\t\t\t\tuid: '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// filterReminders();\r\n\t\tsetOpenDeleteDialog(false);\r\n\t\thistory.push('/categories');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='reminder'>\r\n\t\t\t{activeCategory.cid !== '' ? (\r\n\t\t\t\t<div className='reminder__container'>\r\n\t\t\t\t\t<h1>Your Reminders for {activeCategory.title}</h1>\r\n\r\n\t\t\t\t\t<div className='reminder__add' onClick={handleDialogOpen}>\r\n\t\t\t\t\t\t<AddCircleIcon className='reminder__addIcon' />\r\n\r\n\t\t\t\t\t\t<p className='reminder__addText'>Add new reminder</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={dialogOpen}\r\n\t\t\t\t\t\tonClose={handleDialogClose}\r\n\t\t\t\t\t\taria-labelledby='form-dialog-title'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className='reminder__dialog'>\r\n\t\t\t\t\t\t\t<DialogTitle id='form-dialog-title'>\r\n\t\t\t\t\t\t\t\tAdd a Reminder\r\n\t\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t<form onSubmit={handleReminderSubmit}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? title.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? title.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'please add a title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetTitle(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\tsetError(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetDescription(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? date.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? date.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'please select date and time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tid='datetime-local'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Set Date and Time'\r\n\t\t\t\t\t\t\t\t\t\ttype='datetime-local'\r\n\t\t\t\t\t\t\t\t\t\t// defaultValue=\"2017-05-24T10:30\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateTime}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='reminder__dialogButtons'>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#fe5f55',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleDialogClose}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#17b978',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReminderSubmit}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tadd\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Dialog>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\t\tactiveReminders?.length === 0 && 'reminder__noCards'\r\n\t\t\t\t\t\t} ${'reminder__cards'}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{activeReminders?.map((reminder) => (\r\n\t\t\t\t\t\t\t<ReminderCard\r\n\t\t\t\t\t\t\t\tid={reminder.id}\r\n\t\t\t\t\t\t\t\ttitle={reminder.title}\r\n\t\t\t\t\t\t\t\ttext={reminder.text}\r\n\t\t\t\t\t\t\t\ttime={reminder.time}\r\n\t\t\t\t\t\t\t\tdate={reminder.date}\r\n\t\t\t\t\t\t\t\topenDialog={handleDialogOpen}\r\n\t\t\t\t\t\t\t\t// pass delete\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='reminder__buttons'>\r\n\t\t\t\t\t\t<Tooltip title='Go To Categories' placement='right-end'>\r\n\t\t\t\t\t\t\t<KeyboardReturnIcon\r\n\t\t\t\t\t\t\t\tstyle={{ color: '#3a3d44' }}\r\n\t\t\t\t\t\t\t\tclassName='reminder__buttons--hover'\r\n\t\t\t\t\t\t\t\tonClick={() => history.push('/categories')}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\ttitle='Delete This Category'\r\n\t\t\t\t\t\t\tplacement='left-end'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<DeleteIcon\r\n\t\t\t\t\t\t\t\tstyle={{ color: '#3a3d44' }}\r\n\t\t\t\t\t\t\t\tclassName='reminder__buttons--hover'\r\n\t\t\t\t\t\t\t\tonClick={() => setOpenDeleteDialog(true)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\t\topen={openDeleteDialog}\r\n\t\t\t\t\t\t\tonClose={() => setOpenDeleteDialog(false)}\r\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\r\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className='reminder__dialog'>\r\n\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{`Delete category ${activeCategory} ?`}</DialogTitle>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-evenly',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='reminder__dialogButtons'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#fe5f55',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetOpenDeleteDialog(false)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#17b978',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleDeleteCategory}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<ReminderSvg />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Reminder;\r\n","D:\\CS\\To-Do-List-2020\\src\\components\\Navbar.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\SignIn.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\ExistingCategory.js",["85"],"D:\\CS\\To-Do-List-2020\\src\\components\\HomeSvg.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\AddCategory.js",["86"],"D:\\CS\\To-Do-List-2020\\src\\components\\ReminderCard.js",["87"],"import React from 'react';\r\nimport './ReminderCard.css';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nimport TextTruncate from \"react-text-truncate\";\r\n\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction ReminderCard({id, title, text, time, date, openDialog}) {\r\n\r\n    const [{reminders}, dispatch] = useStateValue();\r\n\r\n    const handleEdit = () => {\r\n        dispatch({\r\n            type: 'EDIT_REMINDER',\r\n            payload: {id: id, title: title, text: text}\r\n        });\r\n\r\n        openDialog();\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        var updatedReminders = reminders.filter(function(reminder) {\r\n            return reminder.id !== id;\r\n        })\r\n\r\n        dispatch({\r\n            type: 'UPDATE_REMINDERS',\r\n            payload: updatedReminders\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__left\">\r\n                <h1>{title}</h1>\r\n                {/* <TextTruncate \r\n                    line={1}\r\n                    element=\"p\"\r\n                    truncateText=\"  ...\"\r\n                    text={text}\r\n                    textTruncateChild={<a href=\"#\">Read more</a>}\r\n                /> */}\r\n                <p>{text}</p>\r\n            </div>\r\n            \r\n            <div className=\"card__right\">\r\n                <div className=\"card__rightText\">\r\n                    <p>{date}</p>\r\n                    <p>{time}</p>\r\n                </div>\r\n\r\n                <div className=\"card__rightIcons\">\r\n                <Tooltip title=\"Delete Reminder\" placement=\"left-end\">\r\n                    <DeleteIcon \r\n                        style={{color: \"#e53935\", }} \r\n                        className=\"card__rightIcons--hover\"\r\n                        onClick={handleDelete}\r\n                    />\r\n                </Tooltip>\r\n                <Tooltip title=\"Edit Reminder\" placement=\"right-end\">\r\n                    <EditIcon \r\n                        style={{color: \"#0d8549\", }} \r\n                        className=\"card__rightIcons--hover\"\r\n                        onClick={handleEdit}\r\n                    />\r\n                </Tooltip>\r\n                    \r\n                    \r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReminderCard\r\n","D:\\CS\\To-Do-List-2020\\src\\components\\ReminderSvg.js",[],"D:\\CS\\To-Do-List-2020\\src\\Firebase.js",[],"D:\\CS\\To-Do-List-2020\\src\\config.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":28,"nodeType":"94","messageId":"95","endLine":15,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":14,"column":5,"nodeType":"98","endLine":14,"endColumn":7,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":5,"nodeType":"98","endLine":18,"endColumn":7,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"93","line":20,"column":25,"nodeType":"94","messageId":"95","endLine":20,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":39,"column":5,"nodeType":"98","endLine":39,"endColumn":7,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":68,"column":5,"nodeType":"98","endLine":68,"endColumn":16,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":73,"column":5,"nodeType":"98","endLine":73,"endColumn":13,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":140,"column":25,"nodeType":"108","messageId":"109","endLine":140,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":16,"column":9,"nodeType":"112","messageId":"109","endLine":16,"endColumn":11},{"ruleId":"106","severity":1,"message":"113","line":43,"column":41,"nodeType":"108","messageId":"109","endLine":43,"endColumn":43},{"ruleId":"92","severity":1,"message":"114","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":20},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["117"],["118"],["119"],"React Hook useEffect has a missing dependency: 'filterReminders'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'editText' and 'editTitle'. Either include them or remove the dependency array.",["121"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","Expected '===' and instead saw '=='.","'TextTruncate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},{"desc":"122","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [history]",{"range":"130","text":"131"},{"range":"132","text":"131"},{"range":"133","text":"131"},"Update the dependencies array to be: [filterReminders, reminders]",{"range":"134","text":"135"},"Update the dependencies array to be: [editId, editText, editTitle]",{"range":"136","text":"137"},[332,334],"[history]",[458,460],[991,993],[1752,1763],"[filterReminders, reminders]",[1846,1854],"[editId, editText, editTitle]"]